# .github/workflows/ci.yml

name: CI - Django and Terraform

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    paths:
      - 'my_project/**'
      - 'docker/**'
      - 'terraform/**'
      - '.github/workflows/ci.yml'
      - 'scripts/**'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ENV: dev
      DJANGO_SECRET_KEY: dummysecret
      SECRET_KEY: dummysecret
      DEBUG: "True"
      ALLOWED_HOSTS: 127.0.0.1,localhost
      DB_NAME: db_test
      DB_USER: user
      DB_PASSWORD: pass
      DB_HOST: localhost
      DB_PORT: "5432"

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: db_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          

    steps:
    - name: Clonar el repositorio
      uses: actions/checkout@v3

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Esperar a Postgres
      run: |
        echo "Esperando a que Postgres est√© listo..."
        while ! pg_isready -h localhost -p 5432 -U user; do
          sleep 2
        done

    - name: Configurar variables y migraciones
      run: |
        python manage.py migrate

    - name: Ejecutar pruebas
      run: |
        python manage.py test
      
    - name: Validar formato de Terraform
      run: terraform fmt -check -recursive
      working-directory: ./terraform

    - name: Validar configuracion de terraform
      run: terraform validate
      working-directory: ./terraform
